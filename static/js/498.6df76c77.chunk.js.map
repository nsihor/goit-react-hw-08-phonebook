{"version":3,"file":"static/js/498.6df76c77.chunk.js","mappings":"+PAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qKAUzBC,GAAcJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2BAI3BI,EAAQP,EAAAA,EAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8G,yGCfpBM,EAAYT,EAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mGAOtBO,EAAUV,EAAAA,EAAAA,OAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2U,wMCE9BQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaG,aAGZE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRH,GAAmB,aAAVA,GAAwBI,EAAAA,GAAAA,MAAY,oBAC/C,GAAG,CAACJ,IAGJ,IAAMK,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAM,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC/BjB,GAASkB,EAAAA,EAAAA,IAAML,IAAS,wBAAAE,EAAAI,OAAA,GAAAP,EAAA,KACzB,gBAFiBQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,KAIlB,OACEC,EAAAA,EAAAA,MAAChC,EAAAA,EAAS,CAAAiC,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAE/B,MAAO,GAAIE,SAAU,IACtC8B,iBAAkBnC,EAClBoC,SAAUtB,EAAaiB,UAEvBD,EAAAA,EAAAA,MAAC1C,EAAAA,GAAU,CAAA2C,SAAA,EACTD,EAAAA,EAAAA,MAAClC,EAAAA,GAAK,CAACyC,QAAQ,QAAON,SAAA,CAAC,UAErBC,EAAAA,EAAAA,KAACvC,EAAAA,GAAW,CAAC6C,KAAK,OAAOC,KAAK,QAAQnC,UAAQ,QAEhD4B,EAAAA,EAAAA,KAACQ,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,SAErCX,EAAAA,EAAAA,MAAClC,EAAAA,GAAK,CAACyC,QAAQ,WAAUN,SAAA,CAAC,aAExBC,EAAAA,EAAAA,KAACvC,EAAAA,GAAW,CAAC6C,KAAK,OAAOC,KAAK,WAAWnC,UAAQ,QAEnD4B,EAAAA,EAAAA,KAACQ,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,SAExCT,EAAAA,EAAAA,KAACjC,EAAAA,EAAO,CAACuC,KAAK,SAAQP,SAAC,iBAG3BD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,uCACkCC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,UAAUZ,SAAC,cAIhE,ECtDA,EAFc,WAAH,OAASC,EAAAA,EAAAA,KAAC1B,EAAS,GAAI,C","sources":["form.styled.js","main.styled.js","components/logInForm/logInForm.jsx","pages/logIn.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  outline: solid black;\n  max-width: 300px;\n  min-height: 100px;\n  padding: 16px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 200px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 25px;\n  margin-bottom: 8px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 16px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MainBtn = styled.button`\n  background-color: #fff;\n  border-radius: 8px;\n\n  margin-top: 8px;\n  width: 100px;\n  height: 25px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: pink;\n  }\n\n  :active {\n    transition: background-color 50ms linear;\n    background-color: orange;\n  }\n`;\n","import * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Label, StyledForm, StyledInput } from 'form.styled';\nimport { Container, MainBtn } from 'main.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/operations';\nimport { Link } from 'react-router-dom';\nimport { getError } from '../../redux/selectors';\nimport toast from 'react-hot-toast';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    error && error !== 'No token' && toast.error('Invalid user data');\n  }, [error])\n\n\n  const handleSubmit = async values => {\n    dispatch(login(values));\n  };\n\n  return (\n    <Container>\n      <h2>Please Log In</h2>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Label htmlFor=\"email\">\n            Email:\n            <StyledInput type=\"text\" name=\"email\" required />\n          </Label>\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Label htmlFor=\"password\">\n            Password:\n            <StyledInput type=\"text\" name=\"password\" required />\n          </Label>\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <MainBtn type=\"submit\">Log In</MainBtn>\n        </StyledForm>\n      </Formik>\n      <p>\n        If you don`t have an account click <Link to={'/signUp'}>here</Link>\n      </p>\n    </Container>\n  );\n};\n","import { LogInForm } from 'components/logInForm/logInForm';\n\nconst LogIn = () => <LogInForm />;\n\nexport default LogIn;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","Label","_templateObject3","Container","MainBtn","schema","yup","shape","email","required","password","LogInForm","dispatch","useDispatch","error","useSelector","getError","useEffect","toast","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","login","stop","_x","apply","arguments","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","htmlFor","type","name","ErrorMessage","component","Link","to"],"sourceRoot":""}