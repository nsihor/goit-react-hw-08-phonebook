{"version":3,"file":"static/js/984.0dba0aa6.chunk.js","mappings":"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","sources":["form.styled.js","main.styled.js","components/Section/section.styled.js","components/Section/section.jsx","components/contacts/contacts.styled.js","components/contacts/contacts.jsx","components/filter/filter.styled.js","components/filter/filter.jsx","components/phonebook/phonebook.jsx","pages/contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  outline: solid black;\n  max-width: 300px;\n  min-height: 100px;\n  padding: 16px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 200px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 25px;\n  margin-bottom: 8px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 16px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MainBtn = styled.button`\n  background-color: #fff;\n  border-radius: 8px;\n\n  margin-top: 8px;\n  width: 100px;\n  height: 25px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: pink;\n  }\n\n  :active {\n    transition: background-color 50ms linear;\n    background-color: orange;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SectionContainer = styled.section`\n    padding: 16px;  \n`;","import PropTypes from 'prop-types'; \nimport { SectionContainer } from \"./section.styled\";\n\nexport const Section = ({title, children}) =>             \n<SectionContainer>\n    <h2>{title}</h2>\n    {children}\n</SectionContainer>;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}","import styled from \"@emotion/styled\";\n\nexport const Contact = styled.li`\nfont-size: 24px;\n`;\n\nexport const DeleteBtn = styled.button`\nbackground-color: #fff;\nborder-radius: 8px;\n\nmargin-top: 8px;\nmargin-left: 8px;\nwidth: 60px;\nheight: 25px;\n\ncursor: pointer;\n\n\ntransition: background-color 250ms linear;\n\n:hover {\n    background-color: pink;\n}\n\n:active {\n    transition: background-color 50ms linear;\n    background-color: orange;\n}\n`;","import { Contact, DeleteBtn } from './contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n    dispatch(fetchContacts());\n  };\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <Contact key={contact.id}>\n          {contact.name}: {contact.number}\n          <DeleteBtn onClick={() => handleDeleteContact(contact.id)}>\n            Delete\n          </DeleteBtn>\n        </Contact>\n      ))}\n    </ul>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n\nwidth: 210px;\n\nfont-size: 20px;\n`;","import { Label } from './filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={({ currentTarget: { value } }) => dispatch(setFilter(value))}\n      />\n    </Label>\n  );\n};\n","import * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MainBtn } from 'main.styled';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { Label, StyledForm, StyledInput } from 'form.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^[a-zA-Zа-яА-Я\\s'-]+$/, 'Invalid name')\n    .required(),\n  number: yup\n    .string()\n    .matches(/^\\+?[()\\d\\s-]+$/, 'Invalid phone number')\n    .required(),\n});\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      return alert(`${values.name} is already in contact`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Label htmlFor=\"name\">\n            Name:\n            <StyledInput type=\"text\" name=\"name\" required />\n          </Label>\n          <ErrorMessage name=\"name\" component=\"div\" />\n\n          <Label htmlFor=\"number\">\n            Number:\n            <StyledInput type=\"tel\" name=\"number\" required />\n          </Label>\n          <ErrorMessage name=\"number\" component=\"div\" />\n\n          <MainBtn type=\"submit\">Add contact</MainBtn>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Section } from 'components/Section/section';\nimport { ContactsList } from 'components/contacts/contacts';\nimport { Filter } from 'components/filter/filter';\nimport { Phonebook } from 'components/phonebook/phonebook';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","Label","_templateObject3","Container","MainBtn","SectionContainer","Section","_ref","title","children","_jsxs","_jsx","Contact","DeleteBtn","ContactsList","dispatch","useDispatch","filteredContacts","useSelector","selectFilteredContacts","useEffect","fetchContacts","map","contact","name","number","onClick","id","deleteContact","Filter","filter","getFilter","type","value","onChange","currentTarget","setFilter","schema","yup","shape","matches","required","Phonebook","contacts","getContacts","_Fragment","Formik","initialValues","validationSchema","onSubmit","values","resetForm","some","toLowerCase","alert","concat","addContact","htmlFor","ErrorMessage","component"],"sourceRoot":""}