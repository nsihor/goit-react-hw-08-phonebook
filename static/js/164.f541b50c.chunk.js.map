{"version":3,"file":"static/js/164.f541b50c.chunk.js","mappings":"+PAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qKAUzBC,GAAcJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2BAI3BI,EAAQP,EAAAA,EAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8G,yGCfpBM,EAAYT,EAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mGAOtBO,EAAUV,EAAAA,EAAAA,OAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2U,uJCD9BQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aAGZG,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAACZ,EAAAA,EAAS,CAAAa,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEX,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDS,iBAAkBf,EAClBgB,SAVe,SAAAC,GACnBT,GAASU,EAAAA,EAAAA,IAASD,GACpB,EAQ6BN,UAEvBD,EAAAA,EAAAA,MAACtB,EAAAA,GAAU,CAAAuB,SAAA,EACTD,EAAAA,EAAAA,MAACd,EAAAA,GAAK,CAACuB,QAAQ,OAAMR,SAAA,CAAC,SAEpBC,EAAAA,EAAAA,KAACnB,EAAAA,GAAW,CAAC2B,KAAK,OAAOjB,KAAK,OAAOC,UAAQ,QAE/CQ,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CAAClB,KAAK,OAAOmB,UAAU,SAEpCZ,EAAAA,EAAAA,MAACd,EAAAA,GAAK,CAACuB,QAAQ,QAAOR,SAAA,CAAC,UAErBC,EAAAA,EAAAA,KAACnB,EAAAA,GAAW,CAAC2B,KAAK,OAAOjB,KAAK,QAAQC,UAAQ,QAEhDQ,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CAAClB,KAAK,QAAQmB,UAAU,SAErCZ,EAAAA,EAAAA,MAACd,EAAAA,GAAK,CAACuB,QAAQ,WAAUR,SAAA,CAAC,aAExBC,EAAAA,EAAAA,KAACnB,EAAAA,GAAW,CAAC2B,KAAK,OAAOjB,KAAK,WAAWC,UAAQ,QAEnDQ,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CAAClB,KAAK,WAAWmB,UAAU,SAExCV,EAAAA,EAAAA,KAACb,EAAAA,EAAO,CAACqB,KAAK,SAAQT,SAAC,kBAG3BD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,iCAC4BC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAI,SAASb,SAAC,cAIzD,ECpDA,EAFe,WAAH,OAASC,EAAAA,EAAAA,KAACL,EAAU,GAAI,C","sources":["form.styled.js","main.styled.js","components/signUpForm/signUpForm.jsx","pages/signUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  outline: solid black;\n  max-width: 300px;\n  min-height: 100px;\n  padding: 16px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 200px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 25px;\n  margin-bottom: 8px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 16px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MainBtn = styled.button`\n  background-color: #fff;\n  border-radius: 8px;\n\n  margin-top: 8px;\n  width: 100px;\n  height: 25px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: pink;\n  }\n\n  :active {\n    transition: background-color 50ms linear;\n    background-color: orange;\n  }\n`;\n","import * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Label, StyledForm, StyledInput } from 'form.styled';\nimport { Container, MainBtn } from 'main.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/operations';\nimport { Link } from 'react-router-dom';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport const SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  return (\n    <Container>\n      <h2>Please Sign Up</h2>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Label htmlFor=\"name\">\n            Name:\n            <StyledInput type=\"text\" name=\"name\" required />\n          </Label>\n          <ErrorMessage name=\"name\" component=\"div\" />\n\n          <Label htmlFor=\"email\">\n            Email:\n            <StyledInput type=\"text\" name=\"email\" required />\n          </Label>\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Label htmlFor=\"password\">\n            Password:\n            <StyledInput type=\"text\" name=\"password\" required />\n          </Label>\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <MainBtn type=\"submit\">Sign Up</MainBtn>\n        </StyledForm>\n      </Formik>\n      <p>\n        If you have an account click <Link to={'/logIn'}>here</Link>\n      </p>\n    </Container>\n  );\n};\n","import { SignUpForm } from 'components/signUpForm/signUpForm';\n\nconst SignUp = () => <SignUpForm />;\n\nexport default SignUp;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","Label","_templateObject3","Container","MainBtn","schema","yup","shape","name","required","email","password","SignUpForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","register","htmlFor","type","ErrorMessage","component","Link","to"],"sourceRoot":""}